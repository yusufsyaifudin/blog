<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>yusuf's blog</title><link>https://yusufsyaifudin.github.io/blog/</link><description>Recent content on yusuf's blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yusufsyaifudin.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Better Observability on Ruby on Rails Logs with OpenTelemetry Trace and Span ID</title><link>https://yusufsyaifudin.github.io/blog/posts/2023-02-24-rails-otel-intro/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>https://yusufsyaifudin.github.io/blog/posts/2023-02-24-rails-otel-intro/</guid><description>Ruby on Rails (RoR) is a common framework used by Ruby developers when building web application. It ships with common libraries from logger to active record (for easily querying from database). But, like many current framework in others programming language, we need to write some extra code to make our application easier to observe and debug. For example, on small traffic application we may satisfied by printing some logging such as:</description></item><item><title>Better Observability on Ruby on Rails Logs with OpenTelemetry Trace and Span ID (Part 1 - Preparing Rails Application)</title><link>https://yusufsyaifudin.github.io/blog/posts/2023-02-24-rails-otel-part1/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>https://yusufsyaifudin.github.io/blog/posts/2023-02-24-rails-otel-part1/</guid><description>In this part, I will mainly focusing on preparing Rails application. If you already know about the Rails and want to only focusing on how to make the logs better, you can skip this part and jump to Part 2.
Prepare Rails Application # To make this tutorial is easier to follow both for experienced RoR developers and newcomers, I will create easy to follow step by step tutorial from installing Rails to adding OpenTelemetry library to customize the log output in Rails application.</description></item><item><title>Better Observability on Ruby on Rails Logs with OpenTelemetry Trace and Span ID (Part 2 - Improving Log Output)</title><link>https://yusufsyaifudin.github.io/blog/posts/2023-02-24-rails-otel-part2/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>https://yusufsyaifudin.github.io/blog/posts/2023-02-24-rails-otel-part2/</guid><description>In previous part you already know how to setup a simple (really simple) Rails application with one route. In this part, I will focusing on how we improve the log printed by the standard Rails application.
To recap, if you want to follow this article smoothly, you can use the code from previous part by cloning from my Github repository:
git clone https://github.com/yusufsyaifudin/rails-otel.git And then checkout to the commit id c85c199 where is the last state of the code from previous article.</description></item></channel></rss>